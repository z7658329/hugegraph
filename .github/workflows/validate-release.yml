name: Validate Apache Release

on:
  workflow_dispatch:
    inputs:
      release_version:
        required: true
        default: '1.0.0'
      deploy:
        required: true
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SCRIPT_PATH: hugegraph-dist/scripts/
      URL_PREFIX: https://dist.apache.org/repos/dist/dev/incubator/hugegraph/
      USER:
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
      - name: Install JDK ${{ matrix.java_version }}
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java_version }}
          distribution: 'adopt'
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Get Yarn path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Cache Yarn packages
        uses: actions/cache@v3
        # use id to check `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-


      # TODO: do we need svn & gpg environment?
      - name: Download Svn Sources
        run: |
          rm -rf dist/${{ inputs.release_version }} && svn co ${URL_PREFIX}/${{ inputs.release_version }} dist/${{ inputs.release_version }}
          cd dist/${{ inputs.release_version }} || exit
          echo "pwd info"
          pwd
      - name: Check Environment & Import Public Keys
        run: |
          cd dist/${{ inputs.release_version }}
          echo "pwd info"
          pwd
          shasum --version 1>/dev/null || exit
          gpg --version 1>/dev/null || exit
  
          wget https://downloads.apache.org/incubator/hugegraph/KEYS || exit
          echo "import KEYS"
          gpg --import KEYS

          echo "trust all pk"
          for key in $(gpg --no-tty --list-keys --with-colons | awk -F: '/^pub/ {print $5}'); 
          do
              echo -e "5\ny\n" | gpg --batch --command-fd 0 --edit-key "$key" trust
          done
      - name: Test Running Binary1
        run: |
          echo "TODO: separate script to test binary"
      - name: Test Running Binary2
        run: |
          echo "TODO: separate script to test binary"
      - name: Test Running Binary3
        run: |
          echo "TODO: separate script to test binary"
      - name: Test Running Binary4
        run: |
          echo "TODO: separate script to test binary"
      - name: Test Running Binary5
        run: |
          echo "TODO: separate script to test binary"

    strategy:
      fail-fast: false
      matrix:
        java_version: [ '8', '11' ]
